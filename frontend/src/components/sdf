import React, { useEffect, useState } from "react";
import { AnimatePresence, motion } from "framer-motion";
import { CloseMenu } from "./closeMenu";
import { useAppSelector } from "../../../store/hooks";
import { MenuItem } from "./MenuItem";

const items = ["Home", "bla", "bla", "bla"];

export const Header: React.FC = () => {
  const [windowHeight, setWindowHeight] = useState(window.innerHeight);
  const [windowWidth, setWindowWidth] = useState(window.innerWidth);

  const { opened } = useAppSelector((state) => state.menuSlice);

  const mobile = windowWidth < 780 ? true : false;

  useEffect(() => {
    const handleResize = () => {
      setWindowWidth(window.innerWidth);
      setWindowHeight(window.innerHeight);
    };
    window.addEventListener("resize", handleResize);
    return () => window.removeEventListener("resize", handleResize);
  }, []);

  const variants = {
    open: {
      clipPath: `circle(${windowHeight * 2 + 200}px at 0px 0px)`,
      transition: {
        type: "spring",
        stiffness: 20,
        restDelta: 2,
        duration: 0.1,
      },
    },
    closed: {
      clipPath: "circle(0px at 0px 0px)",
      transition: {
        delay: 0.55,
        type: "spring",
        stiffness: 400,
        damping: 40,
        duration: 0.1,
      },
    },
  };

  return (
    <div>
      <div className="container flex justify-between items-center min-[781px]:hidden">
        <div className="flex gap-3 items-center">
          <img src="../../logo.svg" alt="" />
          <h1 className="biorhyme">Untitled</h1>
        </div>
        <CloseMenu />
      </div>
      <AnimatePresence initial={false}>
        <motion.nav
          className="bg-slate-50 text-black max-[780px]:absolute max-[780px]:h-screen max-[780px]:w-1/2 max-[780px]:top-0 max-[450px]:w-3/4"
          initial={
            windowWidth < 780 ? { display: "none" } : { display: "block" }
          }
          animate={windowWidth < 780 ? (opened ? "open" : "closed") : false}
          exit={windowWidth < 780 ? { display: "none" } : { display: "block" }}
          variants={variants}
        >
          <div className="container flex gap-10 items-center justify-between max-[780px]:flex-col max-[780px]:items-start max-[640px]:ml-0 max-[780px]:ml-11 max-[768px]:ml-4">
            <div className="flex items-center gap-32 max-[780px]:flex-col max-[780px]:items-start max-[780px]:gap-10">
              <div className="flex gap-3 items-center">
                <img src="../../logo.svg" alt="" />
                <h1 className="biorhyme">Untitled</h1>
              </div>
              <ul className="flex gap-4 max-[780px]:flex-col">
                {items.map((el, i) => (
                  <MenuItem key={i} id={i} item={el} />
                ))}
              </ul>
            </div>

            <div className="flex gap-5 max-[780px]:flex-col max-[780px]:items-start">
              <motion.button
                animate={
                  windowWidth < 780
                    ? opened
                      ? {
                          x: 0,
                          opacity: 1,
                        }
                      : {
                          x: 50,
                          opacity: 0,
                        }
                    : {
                        x: 0,
                        opacity: 1,
                      }
                }
                transition={{
                  delay: (items.length + 1) * 0.1,
                }}
                initial={{ x: 50 }}
              >
                Login
              </motion.button>
              <motion.button
                animate={
                  windowWidth < 780
                    ? opened
                      ? {
                          x: 0,
                          opacity: 1,
                        }
                      : {
                          x: 50,
                          opacity: 0,
                        }
                    : {
                        x: 0,
                        opacity: 1,
                      }
                }
                transition={{
                  delay: (items.length + 2) * 0.1,
                }}
                initial={{ x: 50 }}
              >
                Sign up
              </motion.button>
            </div>
          </div>
        </motion.nav>
      </AnimatePresence>
    </div>
  );
};
